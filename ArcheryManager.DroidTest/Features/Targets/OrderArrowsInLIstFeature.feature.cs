// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ArcheryManager.DroidTest.Features.Targets
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TargetSettingFeature")]
    public partial class TargetSettingFeatureFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "OrderArrowsInLIstFeature.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("fr-FR"), "TargetSettingFeature", "\ttests des fonctions ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test l\'ordre des flèches par défault dans la page cible")]
        public virtual void TestLOrdreDesFlechesParDefaultDansLaPageCible()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test l\'ordre des flèches par défault dans la page cible", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.When("J\'ouvre une page de cible fita", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 8
 testRunner.And("je tire une flèche en 200, 100", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 9
 testRunner.And("je tire une flèche en 100, 298", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 10
 testRunner.And("je tire une flèche en 0, 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 13
 testRunner.Then("la fleche 0 de la liste est un 6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 14
 testRunner.Then("la fleche 1 de la liste est un 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 15
 testRunner.Then("la fleche 2 de la liste est un X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test la fonctionnalité d\'ordonner les flèches tirées après le tir dans la page ci" +
            "ble")]
        public virtual void TestLaFonctionnaliteDOrdonnerLesFlechesTireesApresLeTirDansLaPageCible()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test la fonctionnalité d\'ordonner les flèches tirées après le tir dans la page ci" +
                    "ble", ((string[])(null)));
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.When("J\'ouvre une page de cible fita", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 20
 testRunner.And("je tire une flèche en 200, 100", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 21
 testRunner.And("je tire une flèche en 100, 298", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 22
 testRunner.And("je tire une flèche en 0, 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 23
 testRunner.And("j\'ouvre le menu de paramètre", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 24
 testRunner.And("je click sur l option flèche ordonnée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 25
 testRunner.And("je click sur le texte Finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 28
 testRunner.Then("la fleche 0 de la liste est un X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 29
 testRunner.Then("la fleche 1 de la liste est un 6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 30
 testRunner.Then("la fleche 2 de la liste est un 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test la fonctionnalité d\'ordonner des flèches de même valeur dans la page cible")]
        public virtual void TestLaFonctionnaliteDOrdonnerDesFlechesDeMemeValeurDansLaPageCible()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test la fonctionnalité d\'ordonner des flèches de même valeur dans la page cible", ((string[])(null)));
#line 33
this.ScenarioSetup(scenarioInfo);
#line 34
 testRunner.When("J\'ouvre une page de cible fita", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 35
 testRunner.And("je tire une flèche en 40, 70", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 36
 testRunner.And("je tire une flèche en 0, 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 37
 testRunner.And("je tire une flèche en 40, -70", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 38
 testRunner.And("j\'ouvre le menu de paramètre", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 39
 testRunner.And("je click sur l option flèche ordonnée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 40
 testRunner.And("je click sur le texte Finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 43
 testRunner.Then("la fleche 0 de la liste est un X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 44
 testRunner.Then("la fleche 1 de la liste est un 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 45
 testRunner.Then("la fleche 2 de la liste est un 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test de la fonctionnalité d\'ordonner les flèches avant le tir dans la page cible")]
        public virtual void TestDeLaFonctionnaliteDOrdonnerLesFlechesAvantLeTirDansLaPageCible()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test de la fonctionnalité d\'ordonner les flèches avant le tir dans la page cible", ((string[])(null)));
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
 testRunner.When("J\'ouvre une page de cible fita", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 50
 testRunner.When("j\'ouvre le menu de paramètre", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 51
 testRunner.And("je click sur l option flèche ordonnée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 52
 testRunner.And("je click sur le texte Finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 53
 testRunner.And("je tire une flèche en 200, 100", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 54
 testRunner.And("je tire une flèche en 100, 298", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 55
 testRunner.And("je tire une flèche en 0, 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 58
 testRunner.Then("la fleche 0 de la liste est un X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 59
 testRunner.Then("la fleche 1 de la liste est un 6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 60
 testRunner.Then("la fleche 2 de la liste est un 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test de la fonctionnalité d\'ordonner et de retourner à l ordre par défault dans l" +
            "a page cible")]
        public virtual void TestDeLaFonctionnaliteDOrdonnerEtDeRetournerALOrdreParDefaultDansLaPageCible()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test de la fonctionnalité d\'ordonner et de retourner à l ordre par défault dans l" +
                    "a page cible", ((string[])(null)));
#line 63
this.ScenarioSetup(scenarioInfo);
#line 64
 testRunner.When("J\'ouvre une page de cible fita", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 65
 testRunner.When("j\'ouvre le menu de paramètre", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 66
 testRunner.And("je click sur l option flèche ordonnée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 67
 testRunner.And("je reviens à la page d\'avant", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 68
 testRunner.And("je tire une flèche en 200, 100", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 69
 testRunner.And("je tire une flèche en 100, 298", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 70
 testRunner.And("je tire une flèche en 0, 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 71
 testRunner.And("j\'ouvre le menu de paramètre", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 72
 testRunner.And("je click sur l option flèche ordonnée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 73
 testRunner.And("je reviens à la page d\'avant", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 76
 testRunner.Then("la fleche 0 de la liste est un 6", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 77
 testRunner.Then("la fleche 1 de la liste est un 4", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 78
 testRunner.Then("la fleche 2 de la liste est un X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test l\'ordre des flèches par défault dans la page zappette")]
        public virtual void TestLOrdreDesFlechesParDefaultDansLaPageZappette()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test l\'ordre des flèches par défault dans la page zappette", ((string[])(null)));
#line 82
this.ScenarioSetup(scenarioInfo);
#line 83
 testRunner.When("J\'ouvre une page zappette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 84
 testRunner.And("je click sur le boutton 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 85
 testRunner.And("je click sur le boutton 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 86
 testRunner.And("je click sur le boutton X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 89
 testRunner.Then("la fleche 0 de la liste est un 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 90
 testRunner.Then("la fleche 1 de la liste est un 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 91
 testRunner.Then("la fleche 2 de la liste est un X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test la fonctionnalité d\'ordonner les flèches tirées après le tir dans la page za" +
            "ppette")]
        public virtual void TestLaFonctionnaliteDOrdonnerLesFlechesTireesApresLeTirDansLaPageZappette()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test la fonctionnalité d\'ordonner les flèches tirées après le tir dans la page za" +
                    "ppette", ((string[])(null)));
#line 94
this.ScenarioSetup(scenarioInfo);
#line 95
 testRunner.When("J\'ouvre une page zappette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 96
 testRunner.And("je click sur le boutton 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 97
 testRunner.And("je click sur le boutton 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 98
 testRunner.And("je click sur le boutton X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 99
 testRunner.And("j\'ouvre le menu de paramètre", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 100
 testRunner.And("je click sur l option flèche ordonnée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 101
 testRunner.And("je click sur le texte Finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 104
 testRunner.Then("la fleche 0 de la liste est un X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 105
 testRunner.Then("la fleche 1 de la liste est un 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 106
 testRunner.Then("la fleche 2 de la liste est un 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test la fonctionnalité d\'ordonner des flèches de même valeur dans la page zappett" +
            "e")]
        public virtual void TestLaFonctionnaliteDOrdonnerDesFlechesDeMemeValeurDansLaPageZappette()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test la fonctionnalité d\'ordonner des flèches de même valeur dans la page zappett" +
                    "e", ((string[])(null)));
#line 109
this.ScenarioSetup(scenarioInfo);
#line 110
 testRunner.When("J\'ouvre une page zappette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 111
 testRunner.And("je click sur le boutton 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 112
 testRunner.And("je click sur le boutton X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 113
 testRunner.And("je click sur le boutton 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 114
 testRunner.And("j\'ouvre le menu de paramètre", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 115
 testRunner.And("je click sur l option flèche ordonnée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 116
 testRunner.And("je click sur le texte Finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 119
 testRunner.Then("la fleche 0 de la liste est un X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 120
 testRunner.Then("la fleche 1 de la liste est un 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 121
 testRunner.Then("la fleche 2 de la liste est un 10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test de la fonctionnalité d\'ordonner les flèches avant le tir dans la page zappet" +
            "te")]
        public virtual void TestDeLaFonctionnaliteDOrdonnerLesFlechesAvantLeTirDansLaPageZappette()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test de la fonctionnalité d\'ordonner les flèches avant le tir dans la page zappet" +
                    "te", ((string[])(null)));
#line 124
this.ScenarioSetup(scenarioInfo);
#line 125
 testRunner.When("J\'ouvre une page zappette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 126
 testRunner.When("j\'ouvre le menu de paramètre", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 127
 testRunner.And("je click sur l option flèche ordonnée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 128
 testRunner.And("je click sur le texte Finish", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 129
 testRunner.And("je click sur le boutton 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 130
 testRunner.And("je click sur le boutton 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 131
 testRunner.And("je click sur le boutton X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 134
 testRunner.Then("la fleche 0 de la liste est un X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 135
 testRunner.Then("la fleche 1 de la liste est un 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 136
 testRunner.Then("la fleche 2 de la liste est un 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test de la fonctionnalité d\'ordonner et de retourner à l ordre par défault dans l" +
            "a page zappette")]
        public virtual void TestDeLaFonctionnaliteDOrdonnerEtDeRetournerALOrdreParDefaultDansLaPageZappette()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test de la fonctionnalité d\'ordonner et de retourner à l ordre par défault dans l" +
                    "a page zappette", ((string[])(null)));
#line 138
this.ScenarioSetup(scenarioInfo);
#line 139
 testRunner.When("J\'ouvre une page zappette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 140
 testRunner.When("j\'ouvre le menu de paramètre", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 141
 testRunner.And("je click sur l option flèche ordonnée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 142
 testRunner.And("je reviens à la page d\'avant", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 143
 testRunner.And("je click sur le boutton 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 144
 testRunner.And("je click sur le boutton 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 145
 testRunner.And("je click sur le boutton X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 146
 testRunner.And("j\'ouvre le menu de paramètre", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 147
 testRunner.And("je click sur l option flèche ordonnée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 148
 testRunner.And("je reviens à la page d\'avant", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 151
 testRunner.Then("la fleche 0 de la liste est un 5", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 152
 testRunner.Then("la fleche 1 de la liste est un 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 153
 testRunner.Then("la fleche 2 de la liste est un X10", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
