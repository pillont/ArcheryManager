// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace ArcheryManager.DroidTest.Features.Remarks
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("RemarksEditionFeature")]
    public partial class RemarksEditionFeatureFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "RemarksEditionFeature.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("fr-FR"), "RemarksEditionFeature", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test des élements de la page d\'édition de remarques")]
        public virtual void TestDesElementsDeLaPageDEditionDeRemarques()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test des élements de la page d\'édition de remarques", ((string[])(null)));
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.When("J\'ouvre une page d\'édition de remarque", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 7
 testRunner.Then("il y a l\'éditeur de remarques de la volée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 8
 testRunner.And("il y a l\'éditeur de remarques générales", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 9
 testRunner.And("le text de l\'éditeur de remarque générales est emptyMessage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 10
 testRunner.And("le text de l\'éditeur de remarque générales est emptyMessage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 11
 testRunner.And("il y a le bouton d\'historique de remarque générales", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line 12
 testRunner.And("il y a le bouton d\'historique de remarque de volée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Et ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test du bouton valider")]
        public virtual void TestDuBoutonValider()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test du bouton valider", ((string[])(null)));
#line 15
this.ScenarioSetup(scenarioInfo);
#line 16
 testRunner.When("J\'ouvre une page d\'édition de remarque", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 17
 testRunner.Then("le bouton validé des remarques de la volée n\'est pas utilisable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 18
 testRunner.Then("le bouton validé des remarques général n\'est pas utilisable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 20
 testRunner.When("je rentre \"aaa\" dans l\'éditeur de remarque de la volée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 21
 testRunner.Then("le bouton validé des remarques de la volée est utilisable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 22
 testRunner.Then("le bouton validé des remarques général n\'est pas utilisable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 24
 testRunner.When("je rentre \"bbb\" dans l\'éditeur de remarque générales", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 25
 testRunner.Then("le bouton validé des remarques de la volée est utilisable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 26
 testRunner.Then("le bouton validé des remarques général est utilisable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 28
 testRunner.When("je click sur le bouton de validation des remarques générales", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 29
 testRunner.Then("le bouton validé des remarques général n\'est pas utilisable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 30
 testRunner.Then("le bouton validé des remarques de la volée est utilisable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 32
 testRunner.When("je click sur le bouton de validation des remarques de la volée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 33
 testRunner.Then("le bouton validé des remarques général n\'est pas utilisable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 34
 testRunner.Then("le bouton validé des remarques de la volée n\'est pas utilisable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("test du text des editors")]
        public virtual void TestDuTextDesEditors()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test du text des editors", ((string[])(null)));
#line 37
this.ScenarioSetup(scenarioInfo);
#line 38
 testRunner.When("J\'ouvre une page d\'édition de remarque", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 39
 testRunner.When("je rentre \"aaa\" dans l\'éditeur de remarque de la volée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 40
 testRunner.When("je rentre \"bbb\" dans l\'éditeur de remarque générales", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 41
 testRunner.When("je click sur le bouton de validation des remarques générales", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 43
 testRunner.Then("le text de l\'éditeur de remarque générales est emptyMessage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 44
 testRunner.Then("le text de l\'éditeur de remarque de la volée est \"bbb\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 46
 testRunner.When("je click sur le bouton de validation des remarques de la volée", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quand ");
#line 47
 testRunner.Then("le text de l\'éditeur de remarque générales est emptyMessage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line 48
 testRunner.Then("le text de l\'éditeur de remarque de la volée est emptyMessage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Alors ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
